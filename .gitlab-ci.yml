variables:
  GIT_STRATEGY: "fetch"
  GIT_DEPTH: "1"

stages:
  - build

.build_template: &build_definition
  image: ocaml/opam
  stage: build
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - _build
      - ~/.opam
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - _build/
    expire_in: 1 day
  tags:
    - gitlab-org
  script:
    - git -C ~/opam-repository pull origin master
    - sudo ln -f /usr/bin/opam-2.1 /usr/bin/opam
    - opam init --reinit -ni
    - opam install --with-test --with-doc --deps-only .
    - make all
    - make test
    - opam clean

build:
  <<: *build_definition
  image: ocaml/opam

build403:
  <<: *build_definition
  image: ocaml/opam:debian-ocaml-4.03

# make testing a separate job to make sure that all tests have their
# dependencies set up correctly. To test for this, we do not run a full build
# before running "make test". We also test whether the dependencies for each
# subdirectory are setup correctly, by running dune clean between each
# invocation.
test:
  image: ocaml/opam
  stage: build
  script:
    - git -C ~/opam-repository pull origin master
    - sudo ln -f /usr/bin/opam-2.1 /usr/bin/opam
    - opam init --reinit -ni
    - opam update --depexts
    - opam install --with-test --with-doc --deps-only .
    - for d in src/*; do dune runtest $d; dune clean; done
    - dune clean
    - make test
    - opam clean

# make the linting a separate job because:
#   - installing ocamlformat and dependencies from opam takes 5 minutes
#   - avoiding to taint the build environment with additional packages
lint:
  image: ocaml/opam
  stage: build
  script:
    - git -C ~/opam-repository pull origin master
    - sudo ln -f /usr/bin/opam-2.1 /usr/bin/opam
    - opam init --reinit -ni
    - opam update --depexts
      # rebuild dose3.opam to check whether the file in git matches what is
      # generated by dune
    - opam install dune
    - dune build dose3.opam
    - git diff --exit-code
      # check whether source code complies with ocamlformat
    - opam install ocamlformat.0.19.0
    - dune build @fmt
    - opam clean

pages:
  image: ocaml/opam
  stage: build
  only:
    - master
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - _build
      - ~/.opam
      - doc/rtd/_build
  artifacts:
    paths:
      - public/
  script:
    - git -C ~/opam-repository pull origin master
    - sudo ln -f /usr/bin/opam-2.1 /usr/bin/opam
    - opam init --reinit -ni
    - opam update --depexts
    - sudo apt install -yy python3-virtualenv pandoc texlive-latex-base texlive-latex-extra
    - opam install --with-test --with-doc --deps-only .
    - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
    - source $HOME/.poetry/env
    - env --chdir=doc/rtd poetry install
    - make doc
    - mkdir public
    - cp -a doc/rtd/_build/* public
    - cp -a _build/default/_doc/_html public/api

opam-debian:
  image: ocaml/opam:debian
  stage: build
  script:
    - git -C ~/opam-repository pull origin master
    - sudo ln -f /usr/bin/opam-2.1 /usr/bin/opam
    - opam init --reinit -ni
    - opam update --depexts
    - opam pin add -yn .
    - opam install dose3
    - opam reinstall --with-test dose3
    - opam install dose3-extra
    - opam reinstall --with-test dose3-extra

opam-alpine:
  image: ocaml/opam:alpine
  stage: build
  script:
    - git -C ~/opam-repository pull origin master
    - opam update
    - opam pin add -yn .
    - opam depext -iu dose3
    - opam remove dose3 && opam depext -iu --with-test dose3
    - opam depext -iu dose3-extra
    - opam remove dose3-extra && opam depext -iu --with-test dose3-extra
